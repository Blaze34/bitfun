.comment
  - if can? :destroy, Comment
    = link_to '×', comment_path(comment), method: :delete, remote: true, confirm: 'Are you sure you want to remove this comment?', disable_with: '×', class: 'close'
  span.muted= l comment.created_at
  strong= comment.user.login

  - vote = current_user ? current_user.voted_as_when_voted_for(comment) : nil
  .input-prepend.input-append.voting
    = vote_link '+', vote_comment_path(comment), vote
    input.span1.text-center.text-success.count-likes disabled=true value=comment.count_votes_up type=:text
    input.span1.text-center.text-error.count-dislikes disabled=true value=comment.count_votes_down type=:text
    = vote_link '-', vote_comment_path(comment, :dislike), vote === false

  div= comment.body

  blockquote
    - unless comment.leaf?
      = render partial: 'comments/comment', collection: tree.children(comment.id), as: :comment, locals: { tree: tree }
  - if can? :create, Comment
    = link_to 'answer', 'javascript:;', class: 'comment_for', data: { id: comment.id }

  hr